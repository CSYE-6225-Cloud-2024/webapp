name: test and packer build
on:
  pull_request:
    branches:
      - main

jobs:
  # test:
  #   if: github.event.pull_request.merged == true
  #   uses: ./.github/workflows/webapp-CI-2.yml
  #   secrets: inherit

  build:
    needs: test
    name: Packer Build
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    env:
      GCP_ZONE: ${{ vars.GCP_ZONE }}
      SOURCE_IMAGE_FAMILY: ${{ vars.SOURCE_IMAGE_FAMILY }}
      SSH_USERNAME: ${{ vars.SSH_USERNAME }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      DISK_SIZE: ${{ vars.DISK_SIZE }}
      DISK_TYPE: ${{ vars.DISK_TYPE }}
      REGION: 'us-east1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pq
        run: sudo apt-get install jq -y

      - name: zip file
        run: zip -r webapp.zip ../webapp

      - name: Setup packer
        uses: hashicorp/setup-packer@main

      - name: gcloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Packer init
        run: packer init packer/main.pkr.hcl

      # - name: Packer build
      #   run: packer build packer/main.pkr.hcl

      - name: Set image name
        id: get_image_name
        # run: echo "AMI_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)" >> $GITHUB_ENV
        run: echo "TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Make image template
        env:
          AMI_ID: 'centos-8-1712514233'
          DB_HOST: ${{ vars.TF_DB_HOST }}
          DB_USER: ${{ vars.TF_DB_USER }}
          DB_PASSWORD: ${{ secrets.TF_DB_PASSWORD }}
          DB_NAME: ${{ vars.TF_DB_NAME }}
          PORT: ${{ vars.PORT }}
          TIMESTAMP: ${{ env.TIME }}
        run: |
          gcloud beta compute instance-templates create webapp-instance-template-${{env.TIMESTAMP}} --project=${{env.GCP_PROJECT}} \
          --machine-type=n2-standard-2 --network-interface=network-tier=STANDARD,subnet=webapp \
          --instance-template-region=${{env.REGION}} \
          --metadata=startup-script=\#\!/bin/bash$'\n'$'\n'if\ \[\ -f\ /opt/webapp/.env\ \]\;\ then$'\n'\ \ echo\ \"File\ .env\ already\ exists.\"$'\n'\ \ exit\ 0$'\n'fi$'\n'echo\ \"Creating\ .env\ file...\"$'\n'sudo\ tee\ -a\ /opt/webapp/.env\ \>\ /dev/null\ \<\<\ EOF$'\n'PORT=\${{env.PORT}}$'\n'DB_HOST=\${{env.DB_HOST}}$'\n'DB_USER=\${{env.DB_USER}}$'\n'DB_PASSWORD=\${{env.DB_PASSWORD}}$'\n'DB_NAME=\${{env.DB_NAME}}$'\n'EOF$'\n'chown\ csye6225:csye6225\ /opt/webapp/.env$'\n' \
          --maintenance-policy=MIGRATE --provisioning-model=STANDARD \
          --service-account=webapp-service-account@csye6225-cloudapp-dev.iam.gserviceaccount.com --scopes=https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write \
          --region=${{env.REGION}} --tags=webapp-http,db-allow \
          --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=projects/${{env.GCP_PROJECT}}/global/images/$AMI_ID,kms-key=projects/${{env.GCP_PROJECT}}/locations/us/keyRings/Key-ring/cryptoKeys/vm-crypto-key,mode=rw,size=20,type=pd-standard \
          --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any

      - name: Update instance group manager
        env:
          TIMESTAMP: ${{ env.TIME }}
        run: |
          gcloud beta compute instance-groups managed rolling-action start-update webapp-instance-group-manager --project=${{env.GCP_PROJECT}} --type='proactive' --max-surge=0 --max-unavailable=50% --min-ready=300 --minimal-action='replace' --most-disruptive-allowed-action='replace' --replacement-method='recreate' --version=template=projects/${{env.GCP_PROJECT}}/regions/${{env.REGION}}/instanceTemplates/webapp-instance-template-${{env.TIMESTAMP}} --region=${{env.REGION}}

      - name: Check instance group status
        run: |
          gcloud compute instance-groups managed wait-until --stable webapp-instance-group-manager --project=${{env.GCP_PROJECT}} --region=${{env.REGION}}
